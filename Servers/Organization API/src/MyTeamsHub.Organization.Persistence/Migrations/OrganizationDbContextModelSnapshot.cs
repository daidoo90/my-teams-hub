// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTeamsHub.Persistence.Context;

#nullable disable

namespace MyTeamsHub.Persistence.Migrations
{
    [DbContext(typeof(OrganizationDbContext))]
    partial class OrganizationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.OrganizationEntity", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization", "organizations");

                    b.HasData(
                        new
                        {
                            OrganizationId = new Guid("9ab43667-428f-45ce-902b-a19e3d91cf5e"),
                            CreatedOn = new DateTime(2024, 7, 4, 20, 27, 53, 56, DateTimeKind.Utc).AddTicks(9578),
                            Description = "Company is delivering teams management services.",
                            IsDeleted = false,
                            Name = "MyTeamsHub Ltd"
                        });
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.TeamEntity", b =>
                {
                    b.Property<Guid>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Team", "organizations");

                    b.HasData(
                        new
                        {
                            TeamId = new Guid("a933bec8-abd6-40ce-893a-04d33b69ded5"),
                            CreatedOn = new DateTime(2024, 7, 4, 20, 27, 53, 57, DateTimeKind.Utc).AddTicks(6542),
                            Description = "Development team that is delivering mobile applications.",
                            IsDeleted = false,
                            IsSystem = false,
                            Name = "Mobile Dev Team",
                            OrganizationId = new Guid("9ab43667-428f-45ce-902b-a19e3d91cf5e")
                        });
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.TeamMemberEntity", b =>
                {
                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMember", "organizations");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Users.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasswordExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHashBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSaltBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.TeamEntity", b =>
                {
                    b.HasOne("MyTeamsHub.Persistence.Models.Organizations.OrganizationEntity", "Organization")
                        .WithMany("Teams")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.TeamMemberEntity", b =>
                {
                    b.HasOne("MyTeamsHub.Persistence.Models.Organizations.TeamEntity", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MyTeamsHub.Persistence.Models.Users.UserEntity", "User")
                        .WithMany("TeamMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.OrganizationEntity", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Organizations.TeamEntity", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("MyTeamsHub.Persistence.Models.Users.UserEntity", b =>
                {
                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
